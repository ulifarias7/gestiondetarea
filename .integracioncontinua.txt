/proyecto
  ├── /src
  │   ├── requirements.txt
  │   └── otros archivos y carpetas
  ├── /venv
  ├── Dockerfile
  ├── .gitignore
  ├── /github (u otra carpeta relacionada con GitHub)
  └── otros archivos y carpetas

# Usa una imagen base de Python
FROM python:3.9.7

# Configura el directorio de trabajo
WORKDIR /app

# Copia el archivo requirements.txt desde la carpeta src a /app
COPY src/requirements.txt /app/

# Instala las dependencias desde requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Copia todo el contenido de src a /app
COPY src/ /app/

# Comando por defecto para ejecutar tu aplicación (ajusta según sea necesario)
CMD ["python", "main.py"]








name: IC

on:
  push:
    branches: 
        master
  pull_request:
    branches: 
       master


jobs:
  build:
    runs-on: ubuntu-latest  # Cambiar a Ubuntu para mejor compatibilidad con Docker

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9.7'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt

    - name: Run tests
      run: |
        pytest

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t proyecto-python:latest .

    - name: Update TAG
      run: docker tag proyecto-python:latest "${{ secrets.DOCKER_USERNAME }}/proyecto-python:latest"

    - name: Push Docker image to DockerHub
      run: docker push "${{ secrets.DOCKER_USERNAME }}/proyecto-python:latest"