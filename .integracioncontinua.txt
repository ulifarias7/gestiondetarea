/proyecto
  ├── /src
  │   ├── requirements.txt
  │   └── otros archivos y carpetas
  ├── /venv
  ├── Dockerfile
  ├── .gitignore
  ├── /github (u otra carpeta relacionada con GitHub)
  └── otros archivos y carpetas

# Usa una imagen  base oficial  de Python
FROM python:3.9.7

# Configura el directorio de trabajo dentro del contenedor (app) y los comandos posteriores se ejecutan en ese directorio
WORKDIR /app

# Copia el archivo requirements.txt desde la carpeta src a /app con las dependencias que necesita
COPY src/requirements.txt /app/

# Instala las dependencias desde requirements.txt  / y especifica el comando de cache para q no se almacenen de manera temporal 
RUN pip install --no-cache-dir -r requirements.txt

# Copia todo el contenido de src a /src del contenedor
COPY src/ /src

# Comando por defecto para ejecutar tu aplicación (ajusta según sea necesario)
CMD ["python", "main.py"]  (aap.py)


#contruir la imagen 
docker build -t proyecto-python .


#para correr el contendeor
 docker run -d --name proyecto-python-container -p 8080:8000 proyecto-python:latest



name: IC

on:
  push:
    branches: 
        master
  pull_request:
    branches: 
       master


jobs: #trabajos que se ejecutan  
  build: # nombre del trabajo 
    runs-on: ubuntu-latest  # ejecuta el trabajao en una maquina virtual que corre en ubuntu

    steps: #pasos
    - name: Checkout code #clona el repo en la maquinavirtual
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2 #usa la accion para la configuracion de python en la maquina virtual
      with:
        python-version: '3.9.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt

    # - name: Run tests
    #   run: |
    #     pytest

    - name: Log in to DockerHub
      uses: docker/login-action@v2 #accion para iniciar session 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image #contruye la imagen 
      run: docker build -t proyecto-python:latest .

    - name: Update TAG  #etiqueta la imagen de docker con tu nombre de usuario dockerhub y nombre de la imagen 
      run: docker tag proyecto-python:latest "${{ secrets.DOCKER_USERNAME }}/proyecto-python:latest"

#pushe la imagen para que otros la puedan ver 
    - name: Push Docker image to DockerHub
      run: docker push "${{ secrets.DOCKER_USERNAME }}/proyecto-python:latest"

      


#pasos de configuracion
configurar el git hub y poner credenciales 